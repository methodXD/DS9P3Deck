setwd("C:/APEX/DOCS/BUS/DS/R")
install.packages("swirl")
packageVersion("swirl")
setwd("C:/APEX/DOCS/BUS/DS/04_Explore")
library(swirl)
install.packages("swirl")
library(swirl)
swirl()
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv)
g <- ggplot(mpg,aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family="Times")
plot(myx,myy,type="l",ylim=c(-3,3))
g <- ggplot(data=testdat,aes(x=myx,y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(data=mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom_smooth="lm")
qplot(carat,price,data=diamonds,color=cut)+geom_smooth=("lm")
qplot(carat,price,data=diamonds,color=cut,geom_smooth(method="lm"))
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method="lm")
qplot(carat,price,data=diamonds,color=cut,facets=.~cut)+geom_smooth(method="lm")
g<-ggplot(data=diamonds,aes(depth,price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints<-quantile(data=diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints<-quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat,cutpoints)
g<-ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(nlme)
summary(nlme)
head(BodyWeight)
?xyplot
?trellis.par.set
?par
?splom
?print.trellis
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
library(ggplot2movies)
g <- ggplot(maacs, aes(logpm25, NocturnalSympt))
head(mpg)
qplot(data=mpg,cyl,hwy)
qplot(data=mpg,cyl,hwy)+geom_smooth()
qplot(data=mpg,cyl,hwy,smooth="loess")
qplot(data=mpg,cyl,hwy)+stats_smooth("loess")
qplot(data=mpg,cyl,hwy,panel=panel.loess)
qplot(data=mpg,cyl,hwy)+geom_smooth()
?text
names(trellis.par.get())
names(panel())
?panel
?lines
?points
?lattice
?lines
?points
?lpoints
?llines
library(swirl)
swirl()
swirl()
dist(dataFrame)
hc<-hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=.4,col="red")
5
12
abline(h=.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmOjb$iter
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
library(swirl)
swirl()
swirl()
swirl()
swirl()
swirl()
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmOjb$iter
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%diag%*%t(matv)
svd(scale(Mat))
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd$d
svd2
svd2$d
dim(faceData)
a1<-(svd1$u[,1]*svd1$d[1])%*%t(svd1$v[1,])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1<-subset(ssd,subject=1)
sub1<-subset(ssd,subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist<-dist(sub1[,1:3])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
mdist<-dist(sub1[,10:12])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
svd1<-svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon<-which.max(svd1$v)
maxCon<-which.max(svd1$v[,2])
mdist<-dist(c(sub1[,10:12],"maxCon"))
mdist<-dist(c(sub1[,10:12],maxCon))
mdist<-dist(c("sub1[,10:12]","maxCon"))
mdist<-dist(sub1[,c(10:12,maxCon)])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.com=unclass(sub1$activity))
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust<-kmeans(sub1[,-c(562,563)]],centers=6)
kClust<-kmeans(sub1[,-c(562,563)],centers=6)
table(kClust$cluster,sub1$activity)
kClust<-kmeans(sub1[,-c(562,563)],centers=6,nstart=100)
table(kClust$cluster,sub1$activity)
dim(kClust$centers)
laying<-which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown<-which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
swirl()
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames,sep="|")
cnames <- strsplit(cnames,sep="|",fixed=TRUE)
cnames <- strsplit(cnames,"|",fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(in.na(x0))
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
dates<-pm1$Date
str(dates)
dates<-as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both<-intersect(site0,site1)
both
head(pm0)
cnt0<-subset(pm0,State.Code==36,county.site %in% both)
cnt0<-subset(pm0,State.Code==36 & county.site %in% both)
cnt1<-subset(pm1,State.Code==36 & county.site %in% both)
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub<-subset(cnt0,County.Code==63 & Site.ID == 2008)
pm1sub<-subset(cnt1,County.Code==63 & Site.ID == 2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(median(x0sub),lwd=2,na.rm=TRUE)
abline(median,lwd=2,na.rm=TRUE)
abline(h=median(x0sub,na.rm=TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm=TRUE),lwd=2)
rng<-range(x0sub,x1sub,na.rm=TRUE)
rng
mn0<-with(pm0,tapply(Sample.Value, State.Code,mean,na.rm=TRUE))
str(mn0)
mn1<-with(pm1,tapply(Sample.Value, State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0),mean=mn0)
d1 <- data.frame(state=names(mn1),mean=mn1)
mrg<-merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,points(rep(2,52),mrg[,3]))
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x < mrg$mean.y,]
dim(pm0)
head(pm0)
cnames
cnames<-strsplit(cnames,"|",fixed=TRUE)
cnames
exit()
exit
setwd("C:/APEX/DOCS/BUS/DS/09_Products")
setwd("C:/APEX/DOCS/BUS/DS/09_Products/ClassWorkspace")
install.packages("shiny")
find.packages("devtools")
install.packages("devtools")
find.packages("devtools")
find_rtools()
library(shiny)
install.packages("shiny")
library(shiny)
runApp('App1/App1')
runApp('App1/App1')
runApp('App2_mpg')
runApp('App2_mpg')
install.packages("leaflet")
library(leaflet)
my_map <- my_map %>% addMarkers(lat=39.2980803, lng=-76.5898801, popup="Jeff Leek's Office")
install.packages("plotly")
library(plotly)
library(ggplot2)
plot_ly(mtcars, x = ~wt, y = ~mpg, type = "scatter", col=~factor(cyl))
plot_ly(mtcars, x = ~wt, y = ~mpg, type = "scatter", col = ~factor(cyl))
plot_ly(mtcars, x = ~wt, y = ~mpg, type = "markers", col = ~factor(cyl))
plot_ly(mtcars, x = ~wt, y = ~mpg, type = "scatter", col = ~factor(cyl))
plot_ly(mtcars, x = ~wt, y = ~mpg, type = "scatter")
plot_ly(mtcars, x = ~wt, y = ~mpg)
plot_ly(mtcars, x = ~wt, y = ~mpg, type = "scatter", mode="markers")
plot_ly(mtcars, x = ~wt, y = ~mpg, type = "scatter", mode="markers", col = factor(cyl))
plot_ly(mtcars, x = ~wt, y = ~mpg, type = "scatter", mode="markers", col = ~factor(cyl))
plot_ly(mtcars, x = ~wt, y = ~mpg, type = "scatter", mode = "markers", color = ~factor(cyl))
?show
class(show)
class(dgamma)
class(mean)
class(lm)
?lm
?colSums
class(colSums)
?predict
class(predict)
?mean
?show
class(show)
class(mean)
?mean
?predict
?stats
?predict
?dgamma
?show
methods("mean")
methods("show")
methods("dgamma")
methods("lm")
methods("colSums")
methods("predict")
shiny::runApp('App1multi')
runApp('App2_mpg')
runApp('App1multi')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
head(mtcars)
names(mtcars)
lm(hp ~ mpg, data = mtcars)
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
names(mtcars)
mtchoices <- names(mtcars)
mtchoices
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
?plot
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
?corr
?cor
mtcars[,"mpg"]
mtcars[,"wt"]
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
min(mtcars$mpg)
max(mtcars$mpg)
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
?plot
?xlim
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
max(mtcars$wt)
max(mtcars$hp)
?round
335/50
ceiling(335/50)
ceiling(335/50)*50
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
lm(mtcars$mpg ~ mtcars$hp)
fit <- lm(mtcars$mpg ~ mtcars$hp)
fit[,2]
fit[2]
fit
fit$coeff[2]
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
shiny::runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
runApp('C:/APEX/DOCS/BUS/DS/09_Products/Project3')
require(devtools)
install_github("slidify")
install_github("slidify","methodXD")
install_github("slidify","ramnathv")
library(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
install_github("slidify", "ramnathv/slidify")
install.packages("yaml")
require(devtools)
install_github("slidify", "ramnathv")
install_github("ramnathv/slidify")
library(slidify)
install_github("slidifyLibraries", "ramnathv")
install_github("ramnathv/slidifyLibraries")
library(slidify)
author("mydeck")
